// Generated by CoffeeScript 2.5.1
(function() {
  angular.module('lmn.websession', ['core', 'lmn.common']);

}).call(this);

// Generated by CoffeeScript 2.5.1
(function() {
  angular.module('lmn.websession').config(function($routeProvider) {
    return $routeProvider.when('/view/lmn/websession', {
      controller: 'LMNWebsessionController',
      templateUrl: '/lmn_websession:resources/partial/index.html'
    });
  });

  angular.module('lmn.websession').controller('LMNWebsessionController', function($rootScope, $scope, $window, $http, $uibModal, $location, gettext, notify, pageTitle, messagebox) {
    pageTitle.set(gettext('Websession'));
    $scope.getWebConferenceEnabled = function() {
      return $http.get('/api/lmn/websession/webConferenceEnabled').then(function(resp) {
        if (resp.data === true) {
          $scope.enabled = true;
          return $scope.getWebConferences();
        } else {
          return $scope.enabled = false;
        }
      });
    };
    $scope.getWebConferences = function() {
      return $http.get('/api/lmn/websession/webConferences').then(function(resp) {
        return $scope.myWebsessions = resp.data;
      });
    };
    $scope.createWebsession = function() {
      return $uibModal.open({
        templateUrl: '/lmn_websession:resources/partial/createSession.modal.html',
        controller: 'LMNCreateWebsessionModalController',
        size: 'mg'
      }).result.then(function(result) {
        $scope.refreshSessionList();
        return notify.success(gettext('Created successfully!'));
      });
    };
    $scope.startWebsession = function(sessionname, id, attendeepw, moderatorpw) {
      return $http.post('/api/lmn/websession/startWebConference', {
        sessionname: sessionname,
        id: id,
        attendeepw: attendeepw,
        moderatorpw: moderatorpw
      }).then(function(resp) {
        if (resp.data["returncode"] === "SUCCESS") {
          return $http.post('/api/lmn/websession/joinWebConference', {
            id: id,
            password: moderatorpw,
            name: $scope.identity.profile.sn + ", " + $scope.identity.profile.givenName
          }).then(function(resp) {
            $scope.refreshSessionList();
            return window.open(resp.data, '_blank');
          });
        } else {
          notify.error(gettext('Cannot start websession! Try to reload page!'));
          return console.log(resp.data);
        }
      });
    };
    $scope.joinWebsession = function(id, password) {
      return $http.post('/api/lmn/websession/joinWebConference', {
        id: id,
        password: password,
        name: $scope.identity.profile.sn + ", " + $scope.identity.profile.givenName
      }).then(function(resp) {
        $scope.refreshSessionList();
        return window.open(resp.data, '_blank');
      });
    };
    $scope.endWebsession = function(id, moderatorpw) {
      return $http.post('/api/lmn/websession/endWebConference', {
        id: id,
        moderatorpw: moderatorpw
      }).then(function(resp) {
        if (resp.data["returncode"] === "SUCCESS") {
          $scope.refreshSessionList();
          return notify.success(gettext('Stopped successfully!'));
        } else {
          notify.error(gettext('Cannot stop websession! Try to reload page!'));
          return console.log(resp.data);
        }
      });
    };
    $scope.deleteWebsession = function(id) {
      return messagebox.show({
        text: `Delete ${id}?`,
        positive: 'Delete',
        negative: 'Cancel'
      }).then(function() {
        return $http.delete(`/api/lmn/websession/webConference/${$scope.websessionID}`).then(function(resp) {
          $scope.refreshSessionList();
          if (resp.data["status"] === "SUCCESS") {
            return notify.success(gettext("Successfully removed!"));
          } else {
            return notify.error(gettext('Cannot delete entry!'));
          }
        });
      });
    };
    $scope.copyURL = function(id) {
      var body, copyElement, url;
      url = window.location.href.split("/");
      url = url[0] + "//" + url[2] + "/websession/" + id;
      copyElement = document.createElement("textarea");
      copyElement.textContent = url;
      body = document.getElementsByTagName('body')[0];
      body.appendChild(copyElement);
      copyElement.select();
      document.execCommand('copy');
      body.removeChild(copyElement);
      notify.success(gettext('Copied!'));
      return true;
    };
    $scope.showURL = function(id) {
      var url;
      url = window.location.href.split("/");
      url = url[0] + "//" + url[2] + "/websession/" + id;
      return messagebox.show({
        text: url,
        positive: 'Ok'
      });
    };
    $scope.showParticipants = function(participants) {
      return $uibModal.open({
        template: '<div class="modal-header"><h4 translate>Participants</h4></div> <div class="modal-body"><table class="table table-hover"><tr ng:repeat="participant in participants"><td>{{participant}}</td></tr></table></div>',
        controller: 'LMNShowParticipantsModalController',
        resolve: {
          participants: function() {
            return participants;
          }
        }
      });
    };
    $scope.refreshSessionList = function() {
      return $scope.getWebConferences();
    };
    return $scope.$watch('identity.user', function() {
      if ($scope.identity.user === void 0) {
        return;
      }
      if ($scope.identity.user === null) {
        return;
      }
      if ($scope.identity.user === 'root') {
        return;
      }
      $scope.user = $scope.identity.profile;
      return $scope.getWebConferenceEnabled();
    });
  });

  angular.module('lmn.websession').controller('LMNShowParticipantsModalController', function($scope, $window, $route, $uibModal, $uibModalInstance, $http, participants) {
    return $scope.participants = participants;
  });

  angular.module('lmn.websession').controller('LMNCreateWebsessionModalController', function($scope, $window, $route, $uibModal, $uibModalInstance, $http, gettext, notify, messagebox, pageTitle) {
    pageTitle.set(gettext('Websession'));
    $scope.sessionname = "";
    $scope.sessiontype = "public";
    $scope.sessionpassword = "";
    $scope._ = {
      addParticipant: null,
      addClass: null
    };
    $scope.participants = [];
    $scope.create = function() {
      var i, len, participant, ref, tempparticipants;
      if (!$scope.sessionname) {
        notify.error(gettext("You have to enter a name!"));
        return;
      }
      tempparticipants = [];
      ref = $scope.participants;
      for (i = 0, len = ref.length; i < len; i++) {
        participant = ref[i];
        tempparticipants.push(participant.sAMAccountName);
      }
      return $http.post('/api/lmn/websession/webConferences', {
        sessionname: $scope.sessionname,
        sessiontype: $scope.sessiontype,
        sessionpassword: $scope.sessionpassword,
        participants: tempparticipants
      }).then(function(resp) {
        if (resp.data["status"] !== "SUCCESS") {
          notify.error(gettext("Create session failed! Try again later!"));
        }
        return $uibModalInstance.dismiss();
      });
    };
    $scope.findUsers = function(q) {
      return $http.gett(`/api/lmn/session/user-search/${q}`).then(function(resp) {
        $scope.users = resp.data;
        return resp.data;
      });
    };
    $scope.findSchoolClasses = function(q) {
      return $http.get(`/api/lmn/session/schoolClass-search/${q}`).then(function(resp) {
        $scope.class = resp.data;
        return resp.data;
      });
    };
    $scope.$watch('_.addParticipant', function() {
      if ($scope._.addParticipant) {
        $scope.participants.push($scope._.addParticipant);
        return $scope._.addParticipant = null;
      }
    });
    $scope.$watch('_.addSchoolClass', function() {
      var member, members, ref, schoolClass;
      if ($scope._.addSchoolClass) {
        members = $scope._.addSchoolClass.members;
        ref = $scope._.addSchoolClass.members;
        for (schoolClass in ref) {
          member = ref[schoolClass];
          $scope.addParticipant(member);
        }
        return $scope._.addSchoolClass = null;
      }
    });
    $scope.addParticipant = function(participant) {
      return $scope.participants.push(participant);
    };
    $scope.removeParticipant = function(participant) {
      var deleteIndex;
      deleteIndex = $scope.participants.indexOf(participant);
      if (deleteIndex !== -1) {
        return $scope.participants.splice(deleteIndex, 1);
      }
    };
    return $scope.close = function() {
      return $uibModalInstance.dismiss();
    };
  });

}).call(this);

